#!/bin/bash

#set -x

os=$(uname -o || true)
os_arch=$(uname)
os_subarch=$(uname -m)

set -e

if [[ $os == "Msys" ]]; then
   platform=windows-i686-msvc8
elif [[ $os_arch = "Linux" ]]; then
   if [[ $os_subarch == "x86_64" ]]; then
      platform=linux-x86_64
   elif [[ $os_subarch == "i686" ]]; then
      platform=linux-i686
   else
      echo Unknown Linux platform: $os $os_arch $os_subarch > /dev/stderr
      exit 2
   fi
elif [[ $os_arch == "Darwin" ]]; then
   platform=macosx-i686
else
   echo Unknown platform: $os $os_arch $os_subarch > /dev/stderr
   exit 2
fi

branch=$1
vrev=$2
vbrev=$3

usage() {
   echo Usage: $0 [branch] [vendor revision] [vendor-binaries revision] [1 or more packages]
}

if test -z "$vrev" || test -z "$vbrev" || test -z "$branch"; then
   usage
   exit 1
fi

# Shift off the 3 arguments here
shift 3

PACKAGES=$@

if test -z "$PACKAGES"; then
   usage
   exit 1
fi

if [[ $branch = "trunk" ]]; then
   branchString="trunk"
else
   branchString="branches/$branch"
fi

echo Branch: $branch
echo Branch SVN String: $branchString
echo Vendor repo revision: $vrev
echo Vendor-binaries repo revision: $vbrev
echo Platform: $platform
echo Packages: $PACKAGES
#echo 
#echo Correct? Hit Ctrl-c to cancel...
#read

for d in $PACKAGES; do 
   symbolsFound=
   echo "Checking $d in with vrev $vrev, vbrev $vbrev..."
   svn_load_dirs.pl \
    -no_user_input \
    -commit_mesg "Rebuild of $d $platform binaries; generated at vendor repo revision $vrev, vendor-binaries repo revision $vbrev" \
     https://svn.songbirdnest.com/vendor-binaries/$branchString/$platform $d $platform/$d;
done

if [[ $platform != "linux-x86_64" ]]; then
   # this is technically wrong; we could have multiple packages that are XRs
   # and other things, but in practice, we only build XRs by themselves, so
   # it's OK for now...
   if test -n "$(echo $PACKAGES | grep xulrunner)"; then
      symbolRootDir=/var/local/symbols/xulrunner
   else
      symbolRootDir=/var/local/symbols/vendor
   fi
   dirDate=$(date +%Y%m%d)

   for f in $(find build -name "*.zip"); do
      symbolsFound=1
      $platform/mozilla/release/scripts/upload_symbols.sh $f $symbolRootDir/$dirDate-$branch-respins/$platform;
   done

   if ! test -z $symbolsFound; then
      ssh -2 -p $SYMBOL_SERVER_PORT \
       -i "$SYMBOL_SERVER_SSH_KEY" \
       -l $SYMBOL_SERVER_USER $SYMBOL_SERVER_HOST \
       "set -e; echo Running \$HOME/buildbot/breakpad-symlinkify.pl $symbolRootDir $symbolRootDir/$dirDate-$branch-respins/$platform; \$HOME/buildbot/breakpad-symlinkify.pl $symbolRootDir $symbolRootDir/$dirDate-$branch-respins/$platform";
  fi
fi
